name: Release Candidate

on:
  push:
    #branches: [ "main" ]
  pull_request:
    #branches: [ "main" ]

jobs:

  package:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2.1.1
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Package
      run: dotnet dotnet publish -r win-x64 -p:PublishSingleFile=true --self-contained false -c Release --output ./forza/devrel
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.0
      with:
        # Artifact name
        name: ForzaDSX-RC
        # A file, directory or wildcard pattern that describes what to upload
        path: ./forza/devrel
        # The desired behavior if no files are found using the provided path.
    #Available Options:
      #warn: Output a warning but do not fail the action
      #error: Fail the action with an error message
      #ignore: Do not output any warnings or errors, the action does not fail

        if-no-files-found: error
        
        # Duration after which artifact will expire in days. 0 means using default retention.
        retention-days: 4

    - name: Create Draft Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: latest-candidate
        draft: true

    - name: Upload Release Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ForzaDSX-RC
        path: ./forza/devrel
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Get Release ID
      id: get_release_id
      run: echo "::set-output name=id::$(echo '${{ steps.create_release.outputs.id }}')"
      shell: bash
