name: Release Candidate

on:
  push:
    #branches: [ "main" ]
  pull_request:
    #branches: [ "main" ]

jobs:
  package:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Package
        run: dotnet dotnet publish -r win-x64 -p:PublishSingleFile=true --self-contained false -c Release --output ./forza/devrel
      - name: Compress Artifact
        run: Compress-Archive -Path ./forza/devrel -DestinationPath ./forza/devrel/ForzaDSX-RC.zip
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ForzaDSX-RC
          path: ./forza/devrel/ForzaDSX-RC.zip
        continue-on-error: true
      - name: Delete Previous Release
        uses: cosmii02/delete-previous-release@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Pre-Release
        id: create_release
        uses: cosmii02/create-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest-candidate-${{ github.run_number }}-${{ github.run_id }}
          name: Release-Candidate-${{ github.run_number }}-${{ github.run_id }}
          prerelease: true
      - name: Get Release ID
        id: get_release_id
        run: echo "::set-output name=id::$(echo '${{ steps.create_release.outputs.id }}')"
        shell: bash
      - name: Fix DNS
        run: |
          netsh interface ipv4 add dnsservers "Ethernet 3" 1.1.1.1 index=10
          nslookup github.com
      - name: Upload Artifact
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $release_id=${{ steps.get_release_id.outputs.id }}
          $upload_url=$(curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" "https://140.82.114.3/repos/cosmii02/ForzaDSX/releases/${release_id}/uploads" | jq -r '.upload_url')
          $artifact_path="./forza/devrel/ForzaDSX-RC.zip"
          curl --progress-bar --upload-file "${artifact_path}" -H "Content-Type: application/octet-stream" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "${upload_url}?name=$(basename "${artifact_path}")"
        continue-on-error: true
